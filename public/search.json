[{"categories":["cheese"],"content":" Voici le cheese:\nlibrary(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.0.4 ✓ dplyr 1.0.2 ## ✓ tidyr 1.1.2 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.0 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() mpg %\u003e% ggplot() + geom_histogram(aes(x = displ)) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. ","description":"","tags":["fromage"],"title":"Cheesey New Post","uri":"/post/cheesey-new-post/"},{"categories":["wow"],"content":" Wowzer Charlie!\n\\[ \\frac{dy}{dx} = y(x) \\]\n","description":"","tags":["zer"],"title":"Wowzer","uri":"/post/wowzer/"},{"categories":null,"content":"This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:\n You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc.  There are many differences in syntax between Blackfriday’s Markdown and Pandoc’s Markdown. For example, you can write a task list with Blackfriday but not with Pandoc:\n Write an R package. Write a book. … Profit!  Similarly, Blackfriday does not support LaTeX math and Pandoc does. I have added the MathJax support to this theme (hugo-lithium) but there is a caveat for plain Markdown posts: you have to include math expressions in a pair of backticks (inline: `$ $`; display style: `$$ $$`), e.g., $S_n = \\sum_{i=1}^n X_i$.^[This is because we have to protect the math expressions from being interpreted as Markdown. You may not need the backticks if your math expression does not contain any special Markdown syntax such as underscores or asterisks, but it is always a safer choice to use backticks. When you happen to have a pair of literal dollar signs inside the same element, you can escape one dollar sign, e.g., \\$50 and $100 renders “$50 and $100”.] For R Markdown posts, you do not need the backticks, because Pandoc can identify and process math expressions.\nWhen creating a new post, you have to decide whether the post format is Markdown or R Markdown, and this can be done via the ext argument of the function blogdown::new_post(), e.g.\n1  blogdown::new_post(\"Post Title\", ext = '.Rmd')   ","description":"","tags":null,"title":"A Plain Markdown Post","uri":"/post/2016-12-30-hello-markdown/"},{"categories":null,"content":"This is a “hello world” example website for the blogdown package. The theme was forked from @jrutheiser/hugo-lithium-theme and modified by Yihui Xie.\n","description":"","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n","description":"","tags":null,"title":"Lorem Ipsum","uri":"/post/2015-01-01-lorem-ipsum/"}]
